<RuleSet Name="Microsoft.Analyzers.ManagedCodeAnalysis" Description="Microsoft.Analyzers.ManagedCodeAnalysis" ToolsVersion="14.0">
  <Rules AnalyzerId="Microsoft.Analyzers.ManagedCodeAnalysis" RuleNamespace="Microsoft.Rules.Managed">
      <Rule Id="CA1000" Action="Info" />             <!-- Do not declare static members on generic types -->
      <Rule Id="CA1001" Action="Info" />             <!-- Types that own disposable fields should be disposable -->
      <Rule Id="CA1003" Action="Info" />             <!-- Use generic event handler instances -->
      <Rule Id="CA1008" Action="Info" />             <!-- Enums should have zero value -->
      <Rule Id="CA1010" Action="Info" />             <!-- Generic interface should also be implemented -->
      <Rule Id="CA1012" Action="Info" />             <!-- Abstract types should not have constructors -->
      <Rule Id="CA1014" Action="Info" />             <!-- Mark assemblies with CLSCompliant -->
      <Rule Id="CA1016" Action="Info" />             <!-- Mark assemblies with assembly version -->
      <Rule Id="CA1017" Action="Info" />             <!-- Mark assemblies with ComVisible -->
      <Rule Id="CA1018" Action="Warning" />          <!-- Mark attributes with AttributeUsageAttribute -->
      <Rule Id="CA1019" Action="Info" />             <!-- Define accessors for attribute arguments -->
      <Rule Id="CA1021" Action="Info" />             <!-- Avoid out parameters -->
      <Rule Id="CA1024" Action="Info" />             <!-- Use properties where appropriate -->
      <Rule Id="CA1027" Action="Info" />             <!-- Mark enums with FlagsAttribute -->
      <Rule Id="CA1028" Action="Info" />             <!-- Enum Storage should be Int32 -->
      <Rule Id="CA1030" Action="Info" />             <!-- Use events where appropriate -->
      <Rule Id="CA1031" Action="Info" />             <!-- Do not catch general exception types -->
      <Rule Id="CA1032" Action="Info" />             <!-- Implement standard exception constructors -->
      <Rule Id="CA1033" Action="Info" />             <!-- Interface methods should be callable by child types -->
      <Rule Id="CA1034" Action="Info" />             <!-- Nested types should not be visible -->
      <Rule Id="CA1036" Action="Info" />             <!-- Override methods on comparable types -->
      <Rule Id="CA1040" Action="Info" />             <!-- Avoid empty interfaces -->
      <Rule Id="CA1041" Action="Info" />             <!-- Provide ObsoleteAttribute message -->
      <Rule Id="CA1043" Action="Info" />             <!-- Use Integral Or String Argument For Indexers -->
      <Rule Id="CA1044" Action="Info" />             <!-- Properties should not be write only -->
      <Rule Id="CA1050" Action="Warning" />          <!-- Declare types in namespaces -->
      <Rule Id="CA1051" Action="Info" />             <!-- Do not declare visible instance fields -->
      <Rule Id="CA1052" Action="Info" />             <!-- Static holder types should be Static or NotInheritable -->
      <Rule Id="CA1054" Action="Info" />             <!-- Uri parameters should not be strings -->
      <Rule Id="CA1055" Action="Info" />             <!-- Uri return values should not be strings -->
      <Rule Id="CA1056" Action="Info" />             <!-- Uri properties should not be strings -->
      <Rule Id="CA1058" Action="Info" />             <!-- Types should not extend certain base types -->
      <Rule Id="CA1060" Action="Info" />             <!-- Move pinvokes to native methods class -->
      <Rule Id="CA1061" Action="Info" />             <!-- Do not hide base class methods -->
      <Rule Id="CA1062" Action="Info" />             <!-- Validate arguments of public methods -->
      <Rule Id="CA1063" Action="Info" />             <!-- Implement IDisposable Correctly -->
      <Rule Id="CA1064" Action="Info" />             <!-- Exceptions should be public -->
      <Rule Id="CA1065" Action="Info" />             <!-- Do not raise exceptions in unexpected locations -->
      <Rule Id="CA1066" Action="Info" />             <!-- Type {0} should implement IEquatable<T> because it overrides Equals -->
      <Rule Id="CA1067" Action="Info" />             <!-- Override Object.Equals(object) when implementing IEquatable<T> -->
      <Rule Id="CA1068" Action="Info" />             <!-- CancellationToken parameters must come last -->
      <Rule Id="CA1069" Action="Info" />             <!-- Enums values should not be duplicated -->
      <Rule Id="CA1200" Action="Warning" />          <!-- Avoid using cref tags with a prefix -->
      <Rule Id="CA1303" Action="Info" />             <!-- Do not pass literals as localized parameters -->
      <Rule Id="CA1304" Action="Info" />             <!-- Specify CultureInfo -->
      <Rule Id="CA1305" Action="Info" />             <!-- Specify IFormatProvider -->
      <Rule Id="CA1307" Action="Info" />             <!-- Specify StringComparison -->
      <Rule Id="CA1308" Action="Info" />             <!-- Normalize strings to uppercase -->
      <Rule Id="CA1309" Action="Info" />             <!-- Use ordinal stringcomparison -->
      <Rule Id="CA1401" Action="Warning" />          <!-- P/Invokes should not be visible -->
      <Rule Id="CA1501" Action="Info" />             <!-- Avoid excessive inheritance -->
      <Rule Id="CA1502" Action="Info" />             <!-- Avoid excessive complexity -->
      <Rule Id="CA1505" Action="Info" />             <!-- Avoid unmaintainable code -->
      <Rule Id="CA1506" Action="Info" />             <!-- Avoid excessive class coupling -->
      <Rule Id="CA1507" Action="Warning" />          <!-- Use nameof to express symbol names -->
      <Rule Id="CA1508" Action="Info" />             <!-- Avoid dead conditional code -->
      <Rule Id="CA1509" Action="Info" />             <!-- Invalid entry in code metrics rule specification file -->
      <Rule Id="CA1707" Action="Info" />             <!-- Identifiers should not contain underscores -->
      <Rule Id="CA1708" Action="Info" />             <!-- Identifiers should differ by more than case -->
      <Rule Id="CA1710" Action="Info" />             <!-- Identifiers should have correct suffix -->
      <Rule Id="CA1711" Action="Info" />             <!-- Identifiers should not have incorrect suffix -->
      <Rule Id="CA1712" Action="Info" />             <!-- Do not prefix enum values with type name -->
      <Rule Id="CA1714" Action="Info" />             <!-- Flags enums should have plural names -->
      <Rule Id="CA1715" Action="Info" />             <!-- Identifiers should have correct prefix -->
      <Rule Id="CA1716" Action="Info" />             <!-- Identifiers should not match keywords -->
      <Rule Id="CA1717" Action="Info" />             <!-- Only FlagsAttribute enums should have plural names -->
      <Rule Id="CA1720" Action="Info" />             <!-- Identifier contains type name -->
      <Rule Id="CA1721" Action="Info" />             <!-- Property names should not match get methods -->
      <Rule Id="CA1724" Action="Info" />             <!-- Type names should not match namespaces -->
      <Rule Id="CA1725" Action="Info" />             <!-- Parameter names should match base declaration -->
      <Rule Id="CA1801" Action="Info" />             <!-- Review unused parameters -->
      <Rule Id="CA1802" Action="Warning" />          <!-- Use literals where appropriate -->
      <Rule Id="CA1806" Action="Info" />             <!-- Do not ignore method results -->
      <Rule Id="CA1810" Action="Warning" />          <!-- Initialize reference type static fields inline -->
      <Rule Id="CA1812" Action="Info" />             <!-- Avoid uninstantiated internal classes -->
      <Rule Id="CA1813" Action="Info" />             <!-- Avoid unsealed attributes -->
      <Rule Id="CA1814" Action="Info" />             <!-- Prefer jagged arrays over multidimensional -->
      <Rule Id="CA1815" Action="Info" />             <!-- Override equals and operator equals on value types -->
      <Rule Id="CA1816" Action="Info" />             <!-- Dispose methods should call SuppressFinalize -->
      <Rule Id="CA1819" Action="Info" />             <!-- Properties should not return arrays -->
      <Rule Id="CA1820" Action="Info" />             <!-- Test for empty strings using string length -->
      <Rule Id="CA1821" Action="Warning" />          <!-- Remove empty Finalizers -->
      <Rule Id="CA1822" Action="Info" />             <!-- Mark members as static -->
      <Rule Id="CA1823" Action="Warning" />          <!-- Avoid unused private fields -->
      <Rule Id="CA1824" Action="Warning" />          <!-- Mark assemblies with NeutralResourcesLanguageAttribute -->
      <Rule Id="CA1825" Action="Warning" />          <!-- Avoid zero-length array allocations. -->
      <Rule Id="CA1826" Action="Warning" />          <!-- Do not use Enumerable methods on indexable collections. Instead use the collection directly -->
      <Rule Id="CA1827" Action="Warning" />          <!-- Do not use Count() or LongCount() when Any() can be used -->
      <Rule Id="CA1828" Action="Warning" />          <!-- Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used -->
      <Rule Id="CA1829" Action="Warning" />          <!-- Use Length/Count property instead of Count() when available -->
      <Rule Id="CA2000" Action="Info" />             <!-- Dispose objects before losing scope -->
      <Rule Id="CA2002" Action="Info" />             <!-- Do not lock on objects with weak identity -->
      <Rule Id="CA2007" Action="Warning" />          <!-- Consider calling ConfigureAwait on the awaited task -->
      <Rule Id="CA2008" Action="Warning" />          <!-- Do not create tasks without passing a TaskScheduler -->
      <Rule Id="CA2009" Action="Warning" />          <!-- Do not call ToImmutableCollection on an ImmutableCollection value -->
      <Rule Id="CA2010" Action="Info" />             <!-- Always consume the value returned by methods marked with PreserveSigAttribute -->
      <Rule Id="CA2011" Action="Warning" />          <!-- Avoid infinite recursion -->
      <Rule Id="CA2012" Action="Warning" />          <!-- Use ValueTasks correctly -->
      <Rule Id="CA2013" Action="Warning" />          <!-- Do not use ReferenceEquals with value types -->
      <Rule Id="CA2100" Action="Info" />             <!-- Review SQL queries for security vulnerabilities -->
      <Rule Id="CA2101" Action="Info" />             <!-- Specify marshaling for P/Invoke string arguments -->
      <Rule Id="CA2119" Action="Info" />             <!-- Seal methods that satisfy private interfaces -->
      <Rule Id="CA2153" Action="Info" />             <!-- Do Not Catch Corrupted State Exceptions -->
      <Rule Id="CA2200" Action="Warning" />          <!-- Rethrow to preserve stack details. -->
      <Rule Id="CA2201" Action="Info" />             <!-- Do not raise reserved exception types -->
      <Rule Id="CA2207" Action="Warning" />          <!-- Initialize value type static fields inline -->
      <Rule Id="CA2208" Action="Info" />             <!-- Instantiate argument exceptions correctly -->
      <Rule Id="CA2211" Action="Info" />             <!-- Non-constant fields should not be visible -->
      <Rule Id="CA2213" Action="Info" />             <!-- Disposable fields should be disposed -->
      <Rule Id="CA2214" Action="Info" />             <!-- Do not call overridable methods in constructors -->
      <Rule Id="CA2215" Action="Info" />             <!-- Dispose methods should call base class dispose -->
      <Rule Id="CA2216" Action="Info" />             <!-- Disposable types should declare finalizer -->
      <Rule Id="CA2217" Action="Info" />             <!-- Do not mark enums with FlagsAttribute -->
      <Rule Id="CA2218" Action="Info" />             <!-- Override GetHashCode on overriding Equals -->
      <Rule Id="CA2219" Action="Info" />             <!-- Do not raise exceptions in finally clauses -->
      <Rule Id="CA2224" Action="Info" />             <!-- Override Equals on overloading operator equals -->
      <Rule Id="CA2225" Action="Info" />             <!-- Operator overloads have named alternates -->
      <Rule Id="CA2226" Action="Info" />             <!-- Operators should have symmetrical overloads -->
      <Rule Id="CA2227" Action="Info" />             <!-- Collection properties should be read only -->
      <Rule Id="CA2229" Action="Warning" />          <!-- Implement serialization constructors -->
      <Rule Id="CA2231" Action="Info" />             <!-- Overload operator equals on overriding value type Equals -->
      <Rule Id="CA2234" Action="Info" />             <!-- Pass system uri objects instead of strings -->
      <Rule Id="CA2235" Action="Info" />             <!-- Mark all non-serializable fields -->
      <Rule Id="CA2237" Action="Info" />             <!-- Mark ISerializable types with serializable -->
      <Rule Id="CA2241" Action="Warning" />          <!-- Provide correct arguments to formatting methods -->
      <Rule Id="CA2242" Action="Warning" />          <!-- Test for NaN correctly -->
      <!-- CA2243 temporarily disabled: https://github.com/dotnet/roslyn-analyzers/issues/3635 -->
      <Rule Id="CA2243" Action="Info" />             <!-- Attribute string literals should parse correctly -->
      <Rule Id="CA2244" Action="Info" />             <!-- Do not duplicate indexed element initializations -->
      <Rule Id="CA2245" Action="Warning" />          <!-- Do not assign a property to itself. -->
      <Rule Id="CA2246" Action="Info" />             <!-- Assigning symbol and its member in the same statement. -->
      <Rule Id="CA2300" Action="Info" />             <!-- Do not use insecure deserializer BinaryFormatter -->
      <Rule Id="CA2301" Action="Info" />             <!-- Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder -->
      <Rule Id="CA2302" Action="Info" />             <!-- Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize -->
      <Rule Id="CA2305" Action="Info" />             <!-- Do not use insecure deserializer LosFormatter -->
      <Rule Id="CA2310" Action="Info" />             <!-- Do not use insecure deserializer NetDataContractSerializer -->
      <Rule Id="CA2311" Action="Info" />             <!-- Do not deserialize without first setting NetDataContractSerializer.Binder -->
      <Rule Id="CA2312" Action="Info" />             <!-- Ensure NetDataContractSerializer.Binder is set before deserializing -->
      <Rule Id="CA2315" Action="Info" />             <!-- Do not use insecure deserializer ObjectStateFormatter -->
      <Rule Id="CA2321" Action="Info" />             <!-- Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver -->
      <Rule Id="CA2322" Action="Info" />             <!-- Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing -->
      <Rule Id="CA2326" Action="Info" />             <!-- Do not use TypeNameHandling values other than Info -->
      <Rule Id="CA2327" Action="Info" />             <!-- Do not use insecure JsonSerializerSettings -->
      <Rule Id="CA2328" Action="Info" />             <!-- Ensure that JsonSerializerSettings are secure -->
      <Rule Id="CA2329" Action="Info" />             <!-- Do not deserialize with JsonSerializer using an insecure configuration -->
      <Rule Id="CA2330" Action="Info" />             <!-- Ensure that JsonSerializer has a secure configuration when deserializing -->
      <Rule Id="CA3001" Action="Info" />             <!-- Review code for SQL injection vulnerabilities -->
      <Rule Id="CA3002" Action="Info" />             <!-- Review code for XSS vulnerabilities -->
      <Rule Id="CA3003" Action="Info" />             <!-- Review code for file path injection vulnerabilities -->
      <Rule Id="CA3004" Action="Info" />             <!-- Review code for information disclosure vulnerabilities -->
      <Rule Id="CA3005" Action="Info" />             <!-- Review code for LDAP injection vulnerabilities -->
      <Rule Id="CA3006" Action="Info" />             <!-- Review code for process command injection vulnerabilities -->
      <Rule Id="CA3007" Action="Info" />             <!-- Review code for open redirect vulnerabilities -->
      <Rule Id="CA3008" Action="Info" />             <!-- Review code for XPath injection vulnerabilities -->
      <Rule Id="CA3009" Action="Info" />             <!-- Review code for XML injection vulnerabilities -->
      <Rule Id="CA3010" Action="Info" />             <!-- Review code for XAML injection vulnerabilities -->
      <Rule Id="CA3011" Action="Info" />             <!-- Review code for DLL injection vulnerabilities -->
      <Rule Id="CA3012" Action="Info" />             <!-- Review code for regex injection vulnerabilities -->
      <Rule Id="CA3061" Action="Warning" />          <!-- Do Not Add Schema By URL -->
      <Rule Id="CA3075" Action="Warning" />          <!-- Insecure DTD processing in XML -->
      <Rule Id="CA3076" Action="Warning" />          <!-- Insecure XSLT script processing. -->
      <Rule Id="CA3077" Action="Warning" />          <!-- Insecure Processing in API Design, XmlDocument and XmlTextReader -->
      <Rule Id="CA3147" Action="Warning" />          <!-- Mark Verb Handlers With Validate Antiforgery Token -->
      <Rule Id="CA5350" Action="Warning" />          <!-- Do Not Use Weak Cryptographic Algorithms -->
      <Rule Id="CA5351" Action="Warning" />          <!-- Do Not Use Broken Cryptographic Algorithms -->
      <Rule Id="CA5358" Action="Info" />             <!-- Do Not Use Unsafe Cipher Modes -->
      <Rule Id="CA5359" Action="Warning" />          <!-- Do Not Disable Certificate Validation -->
      <Rule Id="CA5360" Action="Warning" />          <!-- Do Not Call Dangerous Methods In Deserialization -->
      <Rule Id="CA5361" Action="Warning" />          <!-- Do Not Disable SChannel Use of Strong Crypto -->
      <Rule Id="CA5362" Action="Info" />             <!-- Do Not Refer Self In Serializable Class -->
      <Rule Id="CA5363" Action="Warning" />          <!-- Do Not Disable Request Validation -->
      <Rule Id="CA5364" Action="Warning" />          <!-- Do Not Use Deprecated Security Protocols -->
      <Rule Id="CA5365" Action="Warning" />          <!-- Do Not Disable HTTP Header Checking -->
      <Rule Id="CA5366" Action="Info" />             <!-- Use XmlReader For DataSet Read Xml -->
      <Rule Id="CA5367" Action="Info" />             <!-- Do Not Serialize Types With Pointer Fields -->
      <Rule Id="CA5368" Action="Warning" />          <!-- Set ViewStateUserKey For Classes Derived From Page -->
      <Rule Id="CA5369" Action="Info" />             <!-- Use XmlReader For Deserialize -->
      <Rule Id="CA5370" Action="Warning" />          <!-- Use XmlReader For Validating Reader -->
      <Rule Id="CA5371" Action="Info" />             <!-- Use XmlReader For Schema Read -->
      <Rule Id="CA5372" Action="Info" />             <!-- Use XmlReader For XPathDocument -->
      <Rule Id="CA5373" Action="Warning" />          <!-- Do not use obsolete key derivation function -->
      <Rule Id="CA5374" Action="Warning" />          <!-- Do Not Use XslTransform -->
      <Rule Id="CA5375" Action="Info" />             <!-- Do Not Use Account Shared Access Signature -->
      <Rule Id="CA5376" Action="Warning" />          <!-- Use SharedAccessProtocol HttpsOnly -->
      <Rule Id="CA5377" Action="Warning" />          <!-- Use Container Level Access Policy -->
      <Rule Id="CA5378" Action="Warning" />          <!-- Do not disable ServicePointManagerSecurityProtocols -->
      <Rule Id="CA5379" Action="Warning" />          <!-- Do Not Use Weak Key Derivation Function Algorithm -->
      <Rule Id="CA5380" Action="Warning" />          <!-- Do Not Add Certificates To Root Store -->
      <Rule Id="CA5381" Action="Warning" />          <!-- Ensure Certificates Are Not Added To Root Store -->
      <Rule Id="CA5382" Action="Info" />             <!-- Use Secure Cookies In ASP.Net Core -->
      <Rule Id="CA5383" Action="Info" />             <!-- Ensure Use Secure Cookies In ASP.Net Core -->
      <Rule Id="CA5384" Action="Warning" />          <!-- Do Not Use Digital Signature Algorithm (DSA) -->
      <Rule Id="CA5385" Action="Warning" />          <!-- Use Rivest–Shamir–Adleman (RSA) Algorithm With Sufficient Key Size -->
      <Rule Id="CA5386" Action="Info" />             <!-- Avoid hardcoding SecurityProtocolType value -->
      <Rule Id="CA5387" Action="Info" />             <!-- Do Not Use Weak Key Derivation Function With Insufficient Iteration Count -->
      <Rule Id="CA5388" Action="Info" />             <!-- Ensure Sufficient Iteration Count When Using Weak Key Derivation Function -->
      <Rule Id="CA5389" Action="Info" />             <!-- Do Not Add Archive Item's Path To The Target File System Path -->
      <Rule Id="CA5390" Action="Info" />             <!-- Do not hard-code encryption key -->
      <Rule Id="CA5391" Action="Info" />             <!-- Use antiforgery tokens in ASP.NET Core MVC controllers -->
      <Rule Id="CA5392" Action="Info" />             <!-- Use DefaultDllImportSearchPaths attribute for P/Invokes -->
      <Rule Id="CA5393" Action="Info" />             <!-- Do not use unsafe DllImportSearchPath value -->
      <Rule Id="CA5394" Action="Info" />             <!-- Do not use insecure randomness -->
      <Rule Id="CA5395" Action="Info" />             <!-- Miss HttpVerb attribute for action methods -->
      <Rule Id="CA5396" Action="Info" />             <!-- Set HttpOnly to true for HttpCookie -->
      <Rule Id="CA5397" Action="Info" />             <!-- Do not use deprecated SslProtocols values -->
      <Rule Id="CA5398" Action="Info" />             <!-- Avoid hardcoded SslProtocols values -->
      <Rule Id="CA5399" Action="Info" />             <!-- HttpClients should enable certificate revocation list checks -->
      <Rule Id="CA5400" Action="Info" />             <!-- Ensure HttpClient certificate revocation list check is not disabled -->
      <Rule Id="CA5401" Action="Info" />             <!-- Do not use CreateEncryptor with non-default IV -->
      <Rule Id="CA5402" Action="Info" />             <!-- Use CreateEncryptor with the default IV  -->
      <Rule Id="CA5403" Action="Info" />             <!-- Do not hard-code certificate -->
      <Rule Id="CA9999" Action="Warning" />          <!-- Analyzer version mismatch -->
  </Rules>
  <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers">
    <Rule Id="AD0001" Action="Info" /> <!-- Analyzer threw an exception -->
    <Rule Id="SA0001" Action="Info" /> <!-- XML comments -->
    <Rule Id="SA1002" Action="Info" /> <!-- Semicolons should not be preceded by a space -->
    <Rule Id="SA1003" Action="Info" /> <!-- Operator should not appear at the end of a line -->
    <Rule Id="SA1004" Action="Info" /> <!-- Documentation line should begin with a space -->
    <Rule Id="SA1005" Action="Info" /> <!-- Single line comment should begin with a space -->
    <Rule Id="SA1008" Action="Info" /> <!-- Opening parenthesis should not be preceded by a space -->
    <Rule Id="SA1009" Action="Info" /> <!-- Closing parenthesis should not be followed by a space -->
    <Rule Id="SA1010" Action="Info" /> <!-- Opening square brackets should not be preceded by a space -->
    <Rule Id="SA1011" Action="Info" /> <!-- Closing square bracket should be followed by a space -->
    <Rule Id="SA1012" Action="Info" /> <!-- Opening brace should be followed by a space -->
    <Rule Id="SA1013" Action="Info" /> <!-- Closing brace should be preceded by a space -->
    <Rule Id="SA1015" Action="Info" /> <!-- Closing generic bracket should not be followed by a space -->
    <Rule Id="SA1021" Action="Info" /> <!-- Negative sign should be preceded by a space -->
    <Rule Id="SA1023" Action="Info" /> <!-- Dereference symbol '*' should not be preceded by a space." -->
    <Rule Id="SA1024" Action="Info" /> <!-- Colon should be followed by a space -->
    <Rule Id="SA1025" Action="Info" /> <!-- Code should not contain multiple whitespace characters in a row -->
    <Rule Id="SA1100" Action="Info" /> <!-- Do not prefix calls with base unless local implementation exists -->
    <Rule Id="SA1101" Action="Info" /> <!-- Prefix local calls with this -->
    <Rule Id="SA1106" Action="Info" /> <!-- Code should not contain empty statements -->
    <Rule Id="SA1107" Action="Info" /> <!-- Code should not contain multiple statements on one line -->
    <Rule Id="SA1108" Action="Info" /> <!-- Block statements should not contain embedded comments -->
    <Rule Id="SA1110" Action="Info" /> <!-- Opening parenthesis or bracket should be on declaration line -->
    <Rule Id="SA1111" Action="Info" /> <!-- Closing parenthesis should be on line of last parameter -->
    <Rule Id="SA1114" Action="Info" /> <!-- Parameter list should follow declaration -->
    <Rule Id="SA1116" Action="Info" /> <!-- Split parameters should start on line after declaration -->
    <Rule Id="SA1117" Action="Info" /> <!-- Parameters should be on same line or separate lines -->
    <Rule Id="SA1118" Action="Info" /> <!-- Parameter should not span multiple lines -->
    <Rule Id="SA1119" Action="Info" /> <!-- Statement should not use unnecessary parenthesis -->
    <Rule Id="SA1120" Action="Info" /> <!-- Comments should contain text -->
    <Rule Id="SA1122" Action="Info" /> <!-- Use string.Empty for empty strings -->
    <Rule Id="SA1123" Action="Info" /> <!-- Region should not be located within a code element -->
    <Rule Id="SA1124" Action="Info" /> <!-- Do not use regions -->
    <Rule Id="SA1125" Action="Info" /> <!-- Use shorthand for nullable types -->
    <Rule Id="SA1127" Action="Info" /> <!-- Generic type constraints should be on their own line -->
    <Rule Id="SA1128" Action="Info" /> <!-- Put constructor initializers on their own line -->
    <Rule Id="SA1130" Action="Info" /> <!-- Use lambda syntax -->
    <Rule Id="SA1131" Action="Info" /> <!-- Constant values should appear on the right-hand side of comparisons -->
    <Rule Id="SA1132" Action="Info" /> <!-- Do not combine fields -->
    <Rule Id="SA1133" Action="Info" /> <!-- Do not combine attributes -->
    <Rule Id="SA1134" Action="Info" /> <!-- Each attribute should be placed on its own line of code -->
    <Rule Id="SA1135" Action="Info" /> <!-- Using directive should be qualified -->
    <Rule Id="SA1136" Action="Info" /> <!-- Enum values should be on separate lines -->
    <Rule Id="SA1137" Action="Info" /> <!-- Elements should have the same indentation -->
    <Rule Id="SA1139" Action="Info" /> <!-- Use literal suffix notation instead of casting -->
    <Rule Id="SA1200" Action="Info" /> <!-- Using directive should appear within a namespace declaration -->
    <Rule Id="SA1201" Action="Info" /> <!-- Elements should appear in the correct order -->
    <Rule Id="SA1202" Action="Info" /> <!-- Elements should be ordered by access -->
    <Rule Id="SA1203" Action="Info" /> <!-- Constants should appear before fields -->
    <Rule Id="SA1204" Action="Info" /> <!-- Static elements should appear before instance elements -->
    <Rule Id="SA1208" Action="Info" /> <!-- Using directive ordering -->
    <Rule Id="SA1209" Action="Info" /> <!-- Using alias directives should be placed after all using namespace directives -->
    <Rule Id="SA1210" Action="Info" /> <!-- Using directives should be ordered alphabetically by the namespaces -->
    <Rule Id="SA1211" Action="Info" /> <!-- Using alias directive ordering -->
    <Rule Id="SA1214" Action="Info" /> <!-- Readonly fields should appear before non-readonly fields -->
    <Rule Id="SA1216" Action="Info" /> <!-- Using static directives should be placed at the correct location -->
    <Rule Id="SA1300" Action="Info" /> <!-- Element should begin with an uppercase letter -->
    <Rule Id="SA1303" Action="Info" /> <!-- Const field names should begin with upper-case letter -->
    <Rule Id="SA1304" Action="Info" /> <!-- Non-private readonly fields should begin with upper-case letter -->
    <Rule Id="SA1306" Action="Info" /> <!-- Field should begin with lower-case letter -->
    <Rule Id="SA1307" Action="Info" /> <!-- Field should begin with upper-case letter -->
    <Rule Id="SA1308" Action="Info" /> <!-- Field should not begin with the prefix 's_' -->
    <Rule Id="SA1309" Action="Info" /> <!-- Field names should not begin with underscore -->
    <Rule Id="SA1310" Action="Info" /> <!-- Field should not contain an underscore -->
    <Rule Id="SA1311" Action="Info" /> <!-- Static readonly fields should begin with upper-case letter -->
    <Rule Id="SA1312" Action="Info" /> <!-- Variable should begin with lower-case letter -->
    <Rule Id="SA1313" Action="Info" /> <!-- Parameter should begin with lower-case letter -->
    <Rule Id="SA1314" Action="Info" /> <!-- Type parameter names should begin with T -->
    <Rule Id="SA1316" Action="Info" /> <!-- Tuple element names should use correct casing -->
    <Rule Id="SA1401" Action="Info" /> <!-- Fields should be private -->
    <Rule Id="SA1402" Action="Info" /> <!-- File may only contain a single type -->
    <Rule Id="SA1403" Action="Info" /> <!-- File may only contain a single namespace -->
    <Rule Id="SA1404" Action="Info" /> <!-- Code analysis suppression should have justification -->
    <Rule Id="SA1405" Action="Info" /> <!-- Debug.Assert should provide message text -->
    <Rule Id="SA1407" Action="Info" /> <!-- Arithmetic expressions should declare precedence -->
    <Rule Id="SA1408" Action="Info" /> <!-- Conditional expressions should declare precedence -->
    <Rule Id="SA1413" Action="Info" /> <!-- Use trailing comma in multi-line initializers -->
    <Rule Id="SA1414" Action="Info" /> <!-- Tuple types in signatures should have element names -->
    <Rule Id="SA1500" Action="Info" /> <!-- Braces for multi-line statements should not share line -->
    <Rule Id="SA1501" Action="Info" /> <!-- Statement should not be on a single line -->
    <Rule Id="SA1502" Action="Info" /> <!-- Element should not be on a single line -->
    <Rule Id="SA1503" Action="Info" /> <!-- Braces should not be omitted -->
    <Rule Id="SA1504" Action="Info" /> <!-- All accessors should be single-line or multi-line -->
    <Rule Id="SA1505" Action="Info" /> <!-- An opening brace should not be followed by a blank line -->
    <Rule Id="SA1506" Action="Info" /> <!-- Element documentation headers should not be followed by blank line -->
    <Rule Id="SA1507" Action="Info" /> <!-- Code should not contain multiple blank lines in a row -->
    <Rule Id="SA1508" Action="Info" /> <!-- A closing brace should not be preceded by a blank line -->
    <Rule Id="SA1509" Action="Info" /> <!-- Opening braces should not be preceded by blank line -->
    <Rule Id="SA1510" Action="Info" /> <!-- 'else' statement should not be preceded by a blank line -->
    <Rule Id="SA1512" Action="Info" /> <!-- Single-line comments should not be followed by blank line -->
    <Rule Id="SA1513" Action="Info" /> <!-- Closing brace should be followed by blank line -->
    <Rule Id="SA1514" Action="Info" /> <!-- Element documentation header should be preceded by blank line -->
    <Rule Id="SA1515" Action="Info" /> <!-- Single-line comment should be preceded by blank line -->
    <Rule Id="SA1516" Action="Info" /> <!-- Elements should be separated by blank line -->
    <Rule Id="SA1519" Action="Info" /> <!-- Braces should not be omitted from multi-line child statement -->
    <Rule Id="SA1520" Action="Info" /> <!-- Use braces consistently -->
    <Rule Id="SA1600" Action="Info" /> <!-- Elements should be documented -->
    <Rule Id="SA1601" Action="Info" /> <!-- Partial elements should be documented -->
    <Rule Id="SA1602" Action="Info" /> <!-- Enumeration items should be documented -->
    <Rule Id="SA1604" Action="Info" /> <!-- Element documentation should have summary -->
    <Rule Id="SA1605" Action="Info" /> <!-- Partial element documentation should have summary -->
    <Rule Id="SA1606" Action="Info" /> <!-- Element documentation should have summary text -->
    <Rule Id="SA1608" Action="Info" /> <!-- Element documentation should not have default summary -->
    <Rule Id="SA1610" Action="Info" /> <!-- Property documentation should have value text -->
    <Rule Id="SA1611" Action="Info" /> <!-- The documentation for parameter 'message' is missing -->
    <Rule Id="SA1612" Action="Info" /> <!-- The parameter documentation is at incorrect position -->
    <Rule Id="SA1614" Action="Info" /> <!-- Element parameter documentation should have text -->
    <Rule Id="SA1615" Action="Info" /> <!-- Element return value should be documented -->
    <Rule Id="SA1616" Action="Info" /> <!-- Element return value documentation should have text -->
    <Rule Id="SA1618" Action="Info" /> <!-- The documentation for type parameter is missing -->
    <Rule Id="SA1619" Action="Info" /> <!-- The documentation for type parameter is missing -->
    <Rule Id="SA1622" Action="Info" /> <!-- Generic type parameter documentation should have text -->
    <Rule Id="SA1623" Action="Info" /> <!-- Property documentation text -->
    <Rule Id="SA1624" Action="Info" /> <!-- Because the property only contains a visible get accessor, the documentation summary text should begin with 'Gets' -->
    <Rule Id="SA1625" Action="Info" /> <!-- Element documentation should not be copied and pasted -->
    <Rule Id="SA1626" Action="Info" /> <!-- Single-line comments should not use documentation style slashes -->
    <Rule Id="SA1627" Action="Info" /> <!-- The documentation text within the \'exception\' tag should not be empty -->
    <Rule Id="SA1629" Action="Info" /> <!-- Documentation text should end with a period -->
    <Rule Id="SA1633" Action="Info" /> <!-- File should have header -->
    <Rule Id="SA1642" Action="Info" /> <!-- Constructor summary documentation should begin with standard text -->
    <Rule Id="SA1643" Action="Info" /> <!-- Destructor summary documentation should begin with standard text -->
    <Rule Id="SA1649" Action="Info" /> <!-- File name should match first type name -->
  </Rules>
  <Rules AnalyzerId="xunit.analyzers" RuleNamespace="xunit.analyzers">
    <Rule Id="xUnit2013" Action="Info" /> <!-- Do not use equality check to check for collection size. -->
    <Rule Id="xUnit2017" Action="Info" /> <!-- Do not use Contains() to check if a value exists in a collection -->
  </Rules>
</RuleSet>
